{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\Transactions\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport api from '../../services/api';\nimport next from \"../../assets/next.png\";\nimport * as S from './styles';\n\nfunction Transactions() {\n  _s();\n\n  const [company, setCompany] = useState([]);\n  let pass;\n  let userData = {};\n  const config = {\n    headers: {\n      \"Authorization\": `bearer ${localStorage.getItem('token')}`\n    }\n  };\n  useEffect(() => {\n    validation();\n  });\n\n  function validation() {\n    if (localStorage.getItem('token') === null || localStorage.getItem('token') === \"undefined\") {\n      window.location.href = \"/\";\n    }\n  }\n\n  async function loadUserData() {\n    await api.get(`/user/`, config).then(response => {\n      userData = JSON.stringify(response);\n      console.log(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async function handleCompany(event) {\n    loadUserData();\n    let i;\n    let insert = document.getElementById(\"insertCompany\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"insertPassword\",\n      children: \"Primeiro, insira a senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"catchPassword\",\n      placeholder: \"Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: next,\n      alt: \"submitPassword\",\n      onClick: handleSign\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      trigger: \"Empresa\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: \"\",\n        onLoad: handleCompany,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"\",\n          children: \"Selecionar Empresa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"insertCompany\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), company.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.companies.gatewayKey,\n          children: c.companies.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Transactions, \"2INVmbK3VTBBvCNV+f/SXe5SHkQ=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/Transactions/index.js"],"names":["React","useEffect","useState","Footer","Header","Collapsible","api","next","S","Transactions","company","setCompany","pass","userData","config","headers","localStorage","getItem","validation","window","location","href","loadUserData","get","then","response","JSON","stringify","console","log","catch","error","handleCompany","event","i","insert","document","getElementById","handleSign","map","c","companies","gatewayKey","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport api from '../../services/api'\r\nimport next from \"../../assets/next.png\"\r\nimport * as S from './styles'\r\n\r\nfunction Transactions(){\r\n    \r\n    const [company, setCompany] = useState([])\r\n    let pass\r\n    let userData = {}\r\n    const config = {\r\n        headers: { \"Authorization\": `bearer ${localStorage.getItem('token')}` }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        validation()\r\n    })\r\n\r\n\r\n    function validation(){\r\n        if(localStorage.getItem('token') === null || localStorage.getItem('token') === \"undefined\"){\r\n            window.location.href = \"/\"\r\n        }\r\n    }\r\n\r\n    async function loadUserData(){\r\n        await api.get(`/user/`, config)\r\n        .then(response =>{\r\n            userData = JSON.stringify(response)\r\n            console.log(userData)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    async function handleCompany(event){\r\n        loadUserData()\r\n        let i\r\n        let insert = document.getElementById(\"insertCompany\")\r\n        \r\n        \r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n            <h1>Cadastrar Transação</h1>\r\n            <p id=\"insertPassword\">Primeiro, insira a senha</p>\r\n            <input id=\"catchPassword\" placeholder=\"Senha\"/>\r\n            <img src={next} alt=\"submitPassword\" \r\n            onClick={handleSign}/>\r\n            <Collapsible trigger=\"Empresa\">\r\n                <select value=\"\" onLoad={handleCompany}>\r\n                <option selected value=\"\">Selecionar Empresa</option>\r\n                <div id=\"insertCompany\">\r\n\r\n                </div>\r\n                {\r\n                company.map(c =>(\r\n                    <option value={c.companies.gatewayKey}>{c.companies.name}</option>\r\n                ))\r\n                }\r\n                </select>\r\n            </Collapsible>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Transactions"]},"metadata":{},"sourceType":"module"}