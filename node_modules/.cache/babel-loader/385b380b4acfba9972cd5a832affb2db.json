{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\CompanyCreate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as S from './styles';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport Footer from '../../components/Footer';\nimport nextIcon from '../../assets/next.png';\nimport api from '../../services/api';\n\nfunction CompanyCreate() {\n  _s();\n\n  const [typeCompany, setTypeCompany] = useState('private');\n  const [bank, setBank] = useState([{\n    \"_id\": \"125\",\n    \"name\": \"PLURAL S.A. BANCO MULTIPLO\"\n  }]);\n  const [bankId, setBankId] = useState();\n\n  function handleSelectedCompany(event) {\n    setTypeCompany(event.target.value);\n  }\n\n  function handleSelectedBank(event) {\n    setBankId(event.target.value);\n    console.log(bankId);\n  }\n\n  async function loadBanks() {\n    await api.get(`/bank`).then(response => {\n      setBank(response.data);\n    });\n  }\n\n  useEffect(() => {\n    loadBanks();\n  });\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRIA\\xC7\\xC3O DE EMPRESA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"personal\",\n      trigger: \"Dados Pessoais\",\n      children: /*#__PURE__*/_jsxDEV(S.PersonalArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"Nome / Raz\\xE3o Social\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"CPF / CNPJ\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"types\",\n          name: \"types\",\n          onChange: handleSelectedCompany,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"legal\",\n            children: \"Pessoa F\\xEDsica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"private\",\n            children: \"Pessoa Jur\\xEDdica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Address, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address\",\n            type: \"text\",\n            placeholder: \"Endere\\xE7o\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"text\",\n            placeholder: \"N\\xB0\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Complement, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"complement\",\n            type: \"text\",\n            placeholder: \"Complemento\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"neighborhood\",\n            type: \"text\",\n            placeholder: \"Bairro\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.City, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            type: \"text\",\n            placeholder: \"Cidade\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uf\",\n            type: \"text\",\n            placeholder: \"UF\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postalcode\",\n            type: \"text\",\n            placeholder: \"CEP\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.BankArea, {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bank\",\n        name: \"bank\",\n        onChange: handleSelectedBank,\n        children: bank.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: b._id,\n          children: b.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Next, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nextIcon,\n          alt: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyCreate, \"TPukenPNL5D+spe+vrscBskO6SI=\");\n\n_c = CompanyCreate;\nexport default CompanyCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCreate\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/CompanyCreate/index.js"],"names":["React","useState","useEffect","S","Header","Collapsible","Footer","nextIcon","api","CompanyCreate","typeCompany","setTypeCompany","bank","setBank","bankId","setBankId","handleSelectedCompany","event","target","value","handleSelectedBank","console","log","loadBanks","get","then","response","data","map","b","_id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport * as S from './styles'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport Footer from '../../components/Footer'\r\nimport nextIcon from '../../assets/next.png'\r\nimport api from '../../services/api'\r\n\r\n\r\nfunction CompanyCreate(){\r\n\r\n    const [typeCompany, setTypeCompany] = useState('private')\r\n    const [bank, setBank] = useState([{\r\n            \"_id\": \"125\",\r\n            \"name\": \"PLURAL S.A. BANCO MULTIPLO\"\r\n          }]\r\n    )\r\n    const [bankId, setBankId] = useState()\r\n\r\n    function handleSelectedCompany(event){\r\n        setTypeCompany(event.target.value)\r\n    }\r\n\r\n    function handleSelectedBank(event){\r\n        setBankId(event.target.value)\r\n        console.log(bankId)\r\n    }\r\n\r\n    async function loadBanks() {\r\n        await api.get(`/bank`)\r\n        .then(response => {\r\n            setBank(response.data)\r\n        })        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadBanks()\r\n    })\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n\r\n                <h1>CRIAÇÃO DE EMPRESA</h1>\r\n            \r\n            <Collapsible className=\"personal\" trigger=\"Dados Pessoais\">\r\n            <S.PersonalArea>\r\n                \r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"Nome / Razão Social\" required/>\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"CPF / CNPJ\" required/>\r\n                <select id=\"types\" name=\"types\" onChange={handleSelectedCompany}>\r\n                <option selected value=\"legal\">Pessoa Física</option>\r\n                <option value=\"private\">Pessoa Jurídica</option>\r\n                </select>\r\n                <S.Address>\r\n                <input id=\"address\" type=\"text\" \r\n                placeholder=\"Endereço\" required/>\r\n                <input id=\"number\" type=\"text\" \r\n                placeholder=\"N°\" required/>\r\n                </S.Address>\r\n                <S.Complement>\r\n                <input id=\"complement\" type=\"text\" \r\n                placeholder=\"Complemento\" required/>\r\n                <input id=\"neighborhood\" type=\"text\" \r\n                placeholder=\"Bairro\" required/>\r\n                </S.Complement>\r\n                <S.City>\r\n                <input id=\"city\" type=\"text\" \r\n                placeholder=\"Cidade\" required/>\r\n                <input id=\"uf\" type=\"text\" \r\n                placeholder=\"UF\" required/>\r\n                <input id=\"postalcode\" type=\"text\" \r\n                placeholder=\"CEP\" required/>\r\n                </S.City>\r\n            </S.PersonalArea>\r\n            </Collapsible>\r\n\r\n            <S.BankArea>\r\n                <select id=\"bank\" name=\"bank\" onChange={handleSelectedBank}>\r\n                    {\r\n                    bank.map(b => (\r\n                    <option selected value={b._id}>{b.name}</option>\r\n                    ))}\r\n                </select>\r\n            </S.BankArea>\r\n                    \r\n                <S.Next>\r\n                <a>\r\n                <img src={nextIcon} alt=\"next\" />\r\n                </a>\r\n                </S.Next>\r\n            \r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default CompanyCreate"]},"metadata":{},"sourceType":"module"}