{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\CompanyCreate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as S from './styles';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport Footer from '../../components/Footer';\nimport nextIcon from '../../assets/next.png';\nimport api from '../../services/api';\n\nfunction CompanyCreate() {\n  _s();\n\n  //State's para buscas na API\n  const [bank, setBank] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]); //Criação dos dados para envio da requisição\n\n  let accountData = {\n    \"type\": `private`,\n    \"document\": `46645341830`,\n    \"name\": `Gabriel Lins Donato`,\n    \"email\": `${localStorage.getItem('email')}`,\n    \"phoneNumbers\": [],\n    \"address\": {\n      \"street\": `Praça Epitácio Pessoa`,\n      \"number\": `03`,\n      \"complement\": `Centro`,\n      \"neighborhood\": `Centro`,\n      \"state\": `SP`,\n      \"city\": `Pedreira`,\n      \"postalCode\": `13920000`\n    },\n    \"bankAccount\": {\n      \"type\": `currentAccount`,\n      \"bank\": `033`,\n      \"agency\": `0298`,\n      \"account\": `01021857`,\n      \"accountDigit\": `9`\n    }\n  }; //Carregar Bancos e Estados ao iniciar\n\n  useEffect(() => {\n    loadBanks();\n    loadStates();\n  }, []); //Carregar Bancos\n\n  async function loadBanks() {\n    await api.get(`/bank`).then(response => {\n      setBank(response.data);\n    });\n  } //Carregar Estados\n\n\n  async function loadStates() {\n    await api.get(`/geo/states`).then(response => {\n      setStates(response.data);\n    });\n  } //Carregar Cidades\n\n\n  async function loadCities() {\n    await api.get(`/geo/states/${accountData.address.state}/cities`).then(response => {\n      setCities(response.data);\n    });\n  } //Envio da requisição\n\n\n  async function submitAccount() {\n    const config = {\n      headers: {\n        \"Authorization\": `bearer ${localStorage.getItem('token')}`\n      }\n    };\n    await api.post(\"/company\", accountData, config).then(response => {\n      alert(\"Empresa cadastrada com sucesso!\");\n      window.location.href = \"/dash\";\n    }).catch(error => {\n      alert(\"Confira os dados e tente novamente!\");\n    });\n  } //Atualizar cidades com base no estado\n\n\n  function handleSelectedState(event) {\n    accountData.address.state = `${event.target.value}`;\n    loadCities();\n    let insert = document.getElementById('insertCities');\n    insert.innerHTML = cities.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: c._id,\n      children: c.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRIA\\xC7\\xC3O DE EMPRESA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"collMenu\",\n      trigger: \"Dados Pessoais\",\n      children: /*#__PURE__*/_jsxDEV(S.PersonalArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"Nome / Raz\\xE3o Social\",\n          required: true,\n          onChange: e => {\n            accountData.name = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"CPF / CNPJ\",\n          required: true,\n          onChange: e => {\n            accountData.document = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"phoneNumbers\",\n          type: \"number\",\n          placeholder: \"(99) 99999-9999\",\n          onChange: e => {\n            accountData.phoneNumbers = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typeCompany\",\n          className: \"typeCompany\",\n          onChange: e => {\n            accountData.type = `${e.target.value}`;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"private\",\n            children: \"Pessoa F\\xEDsica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"legal\",\n            children: \"Pessoa Jur\\xEDdica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Address, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"street\",\n            type: \"text\",\n            placeholder: \"Endere\\xE7o\",\n            required: true,\n            onChange: e => {\n              accountData.address.street = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"number\",\n            placeholder: \"N\\xB0\",\n            required: true,\n            onChange: e => {\n              accountData.address.number = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Complement, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"complement\",\n            type: \"text\",\n            placeholder: \"Complemento\",\n            required: true,\n            onChange: e => {\n              accountData.address.complement = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"neighborhood\",\n            type: \"text\",\n            placeholder: \"Bairro\",\n            required: true,\n            onChange: e => {\n              accountData.address.neighborhood = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.City, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"city\",\n            name: \"city\",\n            onChange: e => {\n              accountData.address.city = `${e.target.value}`;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"insertCities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), cities.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c._id,\n              children: c.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"uf\",\n            name: \"uf\",\n            onLoad: e => {\n              accountData.address.state = `${e.target.value}`;\n            },\n            onChange: handleSelectedState,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"UF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), states.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s._id,\n              children: s.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postalcode\",\n            type: \"number\",\n            placeholder: \"CEP\",\n            required: true,\n            onChange: e => {\n              accountData.address.postalCode = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"collMenu\",\n      trigger: \"Dados Banc\\xE1rios\",\n      children: /*#__PURE__*/_jsxDEV(S.BankArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"bank\",\n          name: \"bank\",\n          onLoad: e => {\n            accountData.bankAccount.bank = `${e.target.value}`;\n          },\n          onChange: e => {\n            accountData.bankAccount.bank = `${e.target.value}`;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"\",\n            children: \"ESCOLHA SEU BANCO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), bank.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: b._id,\n            children: b.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.DataBank, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"agency\",\n            type: \"number\",\n            placeholder: \"Ag\\xEAncia\",\n            required: true,\n            onChange: e => {\n              accountData.bankAccount.agency = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"account\",\n            type: \"number\",\n            placeholder: \"Conta\",\n            required: true,\n            onChange: e => {\n              accountData.bankAccount.account = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"digit\",\n            type: \"number\",\n            placeholder: \"D\\xEDgito\",\n            required: true,\n            onChange: e => {\n              accountData.bankAccount.accountDigit = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typeAccount\",\n          name: \"typeAccount\",\n          onChange: e => {\n            accountData.bankAccount.type = `${e.target.value}`;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"currentAccount\",\n            children: \"Conta Corrente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"savings\",\n            children: \"Conta Poupan\\xE7a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Next, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: submitAccount,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nextIcon,\n          alt: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: `padding-top: 100px;`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyCreate, \"b2bZndde2ynKlGUQFzpT1DZaTX8=\");\n\n_c = CompanyCreate;\nexport default CompanyCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCreate\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/CompanyCreate/index.js"],"names":["React","useState","useEffect","S","Header","Collapsible","Footer","nextIcon","api","CompanyCreate","bank","setBank","states","setStates","cities","setCities","accountData","localStorage","getItem","loadBanks","loadStates","get","then","response","data","loadCities","address","state","submitAccount","config","headers","post","alert","window","location","href","catch","error","handleSelectedState","event","target","value","insert","document","getElementById","innerHTML","map","c","_id","name","e","phoneNumbers","type","street","number","complement","neighborhood","city","s","postalCode","bankAccount","b","agency","account","accountDigit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAGA,SAASC,aAAT,GAAwB;AAAA;;AAEpB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC,CALoB,CAOpB;;AACA,MAAIe,WAAW,GAAG;AAClB,YAAS,SADS;AAElB,gBAAa,aAFK;AAGlB,YAAS,qBAHS;AAIlB,aAAU,GAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAJxB;AAKlB,oBAAgB,EALE;AAMlB,eAAW;AACP,gBAAW,uBADJ;AAEP,gBAAW,IAFJ;AAGP,oBAAe,QAHR;AAIP,sBAAiB,QAJV;AAKP,eAAU,IALH;AAMP,cAAS,UANF;AAOP,oBAAe;AAPR,KANO;AAelB,mBAAe;AACX,cAAS,gBADE;AAEX,cAAS,KAFE;AAGX,gBAAW,MAHA;AAIX,iBAAY,UAJD;AAKX,sBAAiB;AALN;AAfG,GAAlB,CARoB,CA+BpB;;AACAhB,EAAAA,SAAS,CAAC,MAAI;AACViB,IAAAA,SAAS;AACTC,IAAAA,UAAU;AACb,GAHQ,EAGP,EAHO,CAAT,CAhCoB,CAsCpB;;AACA,iBAAeD,SAAf,GAA2B;AACvB,UAAMX,GAAG,CAACa,GAAJ,CAAS,OAAT,EACLC,IADK,CACAC,QAAQ,IAAI;AACdZ,MAAAA,OAAO,CAACY,QAAQ,CAACC,IAAV,CAAP;AACH,KAHK,CAAN;AAIH,GA5CmB,CA8CpB;;;AACA,iBAAeJ,UAAf,GAA2B;AACvB,UAAMZ,GAAG,CAACa,GAAJ,CAAS,aAAT,EACLC,IADK,CACAC,QAAQ,IAAG;AACbV,MAAAA,SAAS,CAACU,QAAQ,CAACC,IAAV,CAAT;AACH,KAHK,CAAN;AAIH,GApDmB,CAsDpB;;;AACA,iBAAeC,UAAf,GAA2B;AACvB,UAAMjB,GAAG,CAACa,GAAJ,CAAS,eAAcL,WAAW,CAACU,OAAZ,CAAoBC,KAAM,SAAjD,EACLL,IADK,CACAC,QAAQ,IAAG;AACbR,MAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAV,CAAT;AACH,KAHK,CAAN;AAIH,GA5DmB,CA8DpB;;;AACA,iBAAeI,aAAf,GAA8B;AAC1B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAE,yBAAkB,UAASb,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAA3D;AADE,KAAf;AAGA,UAAMV,GAAG,CAACuB,IAAJ,CAAS,UAAT,EAAqBf,WAArB,EAAkCa,MAAlC,EACLP,IADK,CACAC,QAAQ,IAAG;AACbS,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACH,KAJK,EAKLC,KALK,CAKCC,KAAK,IAAG;AACXL,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,KAPK,CAAN;AAQH,GA3EmB,CA6EpB;;;AACA,WAASM,mBAAT,CAA6BC,KAA7B,EAAmC;AAC/BvB,IAAAA,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA6B,GAAEY,KAAK,CAACC,MAAN,CAAaC,KAAM,EAAlD;AACAhB,IAAAA,UAAU;AACV,QAAIiB,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb;AACAF,IAAAA,MAAM,CAACG,SAAP,GAAmB/B,MAAM,CAACgC,GAAP,CAAWC,CAAC,iBAC3B;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,GAAjB;AAAA,gBAAuBD,CAAC,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,YADe,CAAnB;AAGH;;AAED,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAGI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAkC,MAAA,OAAO,EAAC,gBAA1C;AAAA,6BACA,QAAC,CAAD,CAAG,YAAH;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,SAAjB;AAA2B,UAAA,IAAI,EAAC,MAAhC;AACA,UAAA,WAAW,EAAC,wBADZ;AACkC,UAAA,QAAQ,MAD1C;AAEA,UAAA,QAAQ,EAAEC,CAAC,IAAI;AAAClC,YAAAA,WAAW,CAACiC,IAAZ,GAAoB,GAAEC,CAAC,CAACV,MAAF,CAASC,KAAM,EAArC;AAAuC;AAFvD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAO,UAAA,SAAS,EAAC,SAAjB;AAA2B,UAAA,IAAI,EAAC,MAAhC;AACA,UAAA,WAAW,EAAC,YADZ;AACyB,UAAA,QAAQ,MADjC;AAEA,UAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,YAAAA,WAAW,CAAC2B,QAAZ,GAAwB,GAAEO,CAAC,CAACV,MAAF,CAASC,KAAM,EAAzC;AAA2C;AAF3D;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAO,UAAA,EAAE,EAAC,cAAV;AAAyB,UAAA,IAAI,EAAC,QAA9B;AACA,UAAA,WAAW,EAAC,iBADZ;AAEA,UAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,YAAAA,WAAW,CAACmC,YAAZ,GAA4B,GAAED,CAAC,CAACV,MAAF,CAASC,KAAM,EAA7C;AAA+C;AAF/D;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,SAAS,EAAC,aAAnC;AACA,UAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,YAAAA,WAAW,CAACoC,IAAZ,GAAoB,GAAEF,CAAC,CAACV,MAAF,CAASC,KAAM,EAArC;AAAuC,WADvD;AAAA,kCAGA;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAmBI,QAAC,CAAD,CAAG,OAAH;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAC,MAAxB;AACA,YAAA,WAAW,EAAC,aADZ;AACuB,YAAA,QAAQ,MAD/B;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAACU,OAAZ,CAAoB2B,MAApB,GAA8B,GAAEH,CAAC,CAACV,MAAF,CAASC,KAAM,EAA/C;AAAiD;AAFjE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAO,YAAA,EAAE,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAC,QAAxB;AACA,YAAA,WAAW,EAAC,OADZ;AACiB,YAAA,QAAQ,MADzB;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAACU,OAAZ,CAAoB4B,MAApB,GAA8B,GAAEJ,CAAC,CAACV,MAAF,CAASC,KAAM,EAA/C;AAAiD;AAFjE;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA6BI,QAAC,CAAD,CAAG,UAAH;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,YAAV;AAAuB,YAAA,IAAI,EAAC,MAA5B;AACA,YAAA,WAAW,EAAC,aADZ;AAC0B,YAAA,QAAQ,MADlC;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAACU,OAAZ,CAAoB6B,UAApB,GAAkC,GAAEL,CAAC,CAACV,MAAF,CAASC,KAAM,EAAnD;AAAqD;AAFrE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAO,YAAA,EAAE,EAAC,cAAV;AAAyB,YAAA,IAAI,EAAC,MAA9B;AACA,YAAA,WAAW,EAAC,QADZ;AACqB,YAAA,QAAQ,MAD7B;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAACU,OAAZ,CAAoB8B,YAApB,GAAoC,GAAEN,CAAC,CAACV,MAAF,CAASC,KAAM,EAArD;AAAuD;AAFvE;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAuCI,QAAC,CAAD,CAAG,IAAH;AAAA,kCAEI;AAAQ,YAAA,EAAE,EAAC,MAAX;AAAkB,YAAA,IAAI,EAAC,MAAvB;AACA,YAAA,QAAQ,EAAES,CAAC,IAAI;AACXlC,cAAAA,WAAW,CAACU,OAAZ,CAAoB+B,IAApB,GAA4B,GAAEP,CAAC,CAACV,MAAF,CAASC,KAAM,EAA7C;AACH,aAHD;AAAA,oCAIA;AAAQ,cAAA,QAAQ,MAAhB;AAAiB,cAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAK,cAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,oBALA,EASA3B,MAAM,CAACgC,GAAP,CAAWC,CAAC,iBACZ;AAAQ,cAAA,KAAK,EAAEA,CAAC,CAACC,GAAjB;AAAA,wBAAuBD,CAAC,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADA,CATA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAiBI;AAAQ,YAAA,EAAE,EAAC,IAAX;AAAgB,YAAA,IAAI,EAAC,IAArB;AACA,YAAA,MAAM,EAAEC,CAAC,IAAI;AAAElC,cAAAA,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA6B,GAAEuB,CAAC,CAACV,MAAF,CAASC,KAAM,EAA9C;AAAgD,aAD/D;AAEA,YAAA,QAAQ,EAAEH,mBAFV;AAAA,oCAGA;AAAQ,cAAA,QAAQ,MAAhB;AAAiB,cAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,EAKA1B,MAAM,CAACkC,GAAP,CAAWY,CAAC,iBACZ;AAAQ,cAAA,KAAK,EAAEA,CAAC,CAACV,GAAjB;AAAA,wBAAuBU,CAAC,CAACT;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADA,CALA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eA2BI;AAAO,YAAA,EAAE,EAAC,YAAV;AAAuB,YAAA,IAAI,EAAC,QAA5B;AACA,YAAA,WAAW,EAAC,KADZ;AACkB,YAAA,QAAQ,MAD1B;AAEA,YAAA,QAAQ,EAAEC,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAACU,OAAZ,CAAoBiC,UAApB,GAAkC,GAAET,CAAC,CAACV,MAAF,CAASC,KAAM,EAAnD;AAAqD;AAFrE;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHJ,eA6EI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAkC,MAAA,OAAO,EAAC,oBAA1C;AAAA,6BACA,QAAC,CAAD,CAAG,QAAH;AAAA,gCAEI;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,IAAI,EAAC,MAAvB;AACA,UAAA,MAAM,EAAES,CAAC,IAAI;AAAElC,YAAAA,WAAW,CAAC4C,WAAZ,CAAwBlD,IAAxB,GAAgC,GAAEwC,CAAC,CAACV,MAAF,CAASC,KAAM,EAAjD;AAAmD,WADlE;AAEA,UAAA,QAAQ,EAAES,CAAC,IAAI;AAAElC,YAAAA,WAAW,CAAC4C,WAAZ,CAAwBlD,IAAxB,GAAgC,GAAEwC,CAAC,CAACV,MAAF,CAASC,KAAM,EAAjD;AAAmD,WAFpE;AAAA,kCAGA;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAKI/B,IAAI,CAACoC,GAAL,CAASe,CAAC,iBACV;AAAQ,YAAA,KAAK,EAAEA,CAAC,CAACb,GAAjB;AAAA,sBAAuBa,CAAC,CAACZ;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADA,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,CAAD,CAAG,QAAH;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAC,QAAxB;AACA,YAAA,WAAW,EAAC,YADZ;AACsB,YAAA,QAAQ,MAD9B;AAEA,YAAA,QAAQ,EAAEC,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAAC4C,WAAZ,CAAwBE,MAAxB,GAAkC,GAAEZ,CAAC,CAACV,MAAF,CAASC,KAAM,EAAnD;AAAqD;AAFrE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAO,YAAA,EAAE,EAAC,SAAV;AAAoB,YAAA,IAAI,EAAC,QAAzB;AACA,YAAA,WAAW,EAAC,OADZ;AACoB,YAAA,QAAQ,MAD5B;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAAC4C,WAAZ,CAAwBG,OAAxB,GAAmC,GAAEb,CAAC,CAACV,MAAF,CAASC,KAAM,EAApD;AAAsD;AAFtE;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAO,YAAA,EAAE,EAAC,OAAV;AAAkB,YAAA,IAAI,EAAC,QAAvB;AACA,YAAA,WAAW,EAAC,WADZ;AACqB,YAAA,QAAQ,MAD7B;AAEA,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,cAAAA,WAAW,CAAC4C,WAAZ,CAAwBI,YAAxB,GAAwC,GAAEd,CAAC,CAACV,MAAF,CAASC,KAAM,EAAzD;AAA2D;AAF3E;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAyBI;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,IAAI,EAAC,aAA9B;AACA,UAAA,QAAQ,EAAES,CAAC,IAAI;AAAClC,YAAAA,WAAW,CAAC4C,WAAZ,CAAwBR,IAAxB,GAAgC,GAAEF,CAAC,CAACV,MAAF,CAASC,KAAM,EAAjD;AAAmD,WADnE;AAAA,kCAGA;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA7EJ,eA+GQ,QAAC,CAAD,CAAG,IAAH;AAAA,6BACA;AAAG,QAAA,OAAO,EAAEb,aAAZ;AAAA,+BACA;AAAK,UAAA,GAAG,EAAErB,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA/GR,eAoHI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,YApHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwHH;;GA/MQE,a;;KAAAA,a;AAiNT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport * as S from './styles'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport Footer from '../../components/Footer'\r\nimport nextIcon from '../../assets/next.png'\r\nimport api from '../../services/api'\r\n\r\n\r\nfunction CompanyCreate(){\r\n\r\n    //State's para buscas na API\r\n    const [bank, setBank] = useState([])\r\n    const [states, setStates] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    \r\n    //Criação dos dados para envio da requisição\r\n    let accountData = {\r\n    \"type\": `private`,\r\n    \"document\": `46645341830`,\r\n    \"name\": `Gabriel Lins Donato`,\r\n    \"email\": `${localStorage.getItem('email')}`,\r\n    \"phoneNumbers\": [],\r\n    \"address\": {\r\n        \"street\": `Praça Epitácio Pessoa`,\r\n        \"number\": `03`,\r\n        \"complement\": `Centro`,\r\n        \"neighborhood\": `Centro`,\r\n        \"state\": `SP`,\r\n        \"city\": `Pedreira`,\r\n        \"postalCode\": `13920000`\r\n},\r\n    \"bankAccount\": {\r\n        \"type\": `currentAccount`,\r\n        \"bank\": `033`,\r\n        \"agency\": `0298`,\r\n        \"account\": `01021857`,\r\n        \"accountDigit\": `9`\r\n}\r\n}\r\n    //Carregar Bancos e Estados ao iniciar\r\n    useEffect(()=>{\r\n        loadBanks()\r\n        loadStates()    \r\n    },[])\r\n\r\n\r\n    //Carregar Bancos\r\n    async function loadBanks() {\r\n        await api.get(`/bank`)\r\n        .then(response => {\r\n            setBank(response.data)\r\n        }) \r\n    }\r\n\r\n    //Carregar Estados\r\n    async function loadStates(){\r\n        await api.get(`/geo/states`)\r\n        .then(response =>{\r\n            setStates(response.data)\r\n        })\r\n    }\r\n\r\n    //Carregar Cidades\r\n    async function loadCities(){\r\n        await api.get(`/geo/states/${accountData.address.state}/cities`)\r\n        .then(response =>{\r\n            setCities(response.data)\r\n        })\r\n    }\r\n\r\n    //Envio da requisição\r\n    async function submitAccount(){\r\n        const config = {\r\n            headers: { \"Authorization\": `bearer ${localStorage.getItem('token')}` }\r\n        };\r\n        await api.post(\"/company\", accountData, config)\r\n        .then(response =>{\r\n            alert(\"Empresa cadastrada com sucesso!\")\r\n            window.location.href = \"/dash\"\r\n        })\r\n        .catch(error =>{\r\n            alert(\"Confira os dados e tente novamente!\")\r\n        })\r\n    }\r\n    \r\n    //Atualizar cidades com base no estado\r\n    function handleSelectedState(event){\r\n        accountData.address.state = `${event.target.value}`\r\n        loadCities()\r\n        let insert = document.getElementById('insertCities')\r\n        insert.innerHTML = cities.map(c => (\r\n            <option value={c._id}>{c.name}</option>\r\n            ))\r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n                <h1>CRIAÇÃO DE EMPRESA</h1>\r\n            <Collapsible className=\"collMenu\" trigger=\"Dados Pessoais\">\r\n            <S.PersonalArea>\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"Nome / Razão Social\" required\r\n                onChange={e => {accountData.name = `${e.target.value}`}}\r\n                />\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"CPF / CNPJ\" required\r\n                onChange={e => {accountData.document = `${e.target.value}`}}\r\n                />\r\n                <input id=\"phoneNumbers\" type=\"number\"\r\n                placeholder=\"(99) 99999-9999\"\r\n                onChange={e => {accountData.phoneNumbers = `${e.target.value}`}}\r\n                />\r\n                <select id=\"typeCompany\" className=\"typeCompany\" \r\n                onChange={e => {accountData.type = `${e.target.value}`}}\r\n                >\r\n                <option selected value=\"private\">Pessoa Física</option>\r\n                <option value=\"legal\">Pessoa Jurídica</option>\r\n                </select>\r\n                <S.Address>\r\n                    <input id=\"street\" type=\"text\" \r\n                    placeholder=\"Endereço\" required\r\n                    onChange={e => {accountData.address.street = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"number\" type=\"number\" \r\n                    placeholder=\"N°\" required\r\n                    onChange={e => {accountData.address.number = `${e.target.value}`}}\r\n                    />\r\n                </S.Address>\r\n                <S.Complement>\r\n                    <input id=\"complement\" type=\"text\" \r\n                    placeholder=\"Complemento\" required\r\n                    onChange={e => {accountData.address.complement = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"neighborhood\" type=\"text\" \r\n                    placeholder=\"Bairro\" required\r\n                    onChange={e => {accountData.address.neighborhood = `${e.target.value}`}}\r\n                    />\r\n                </S.Complement>\r\n                <S.City>\r\n                    {/* BUSCA POR CIDADES */}\r\n                    <select id=\"city\" name=\"city\" \r\n                    onChange={e => { \r\n                        accountData.address.city = `${e.target.value}`\r\n                    }}>\r\n                    <option selected value=\"\">Cidade</option>\r\n                    <div id=\"insertCities\">\r\n\r\n                    </div>\r\n                    {\r\n                    cities.map(c => (\r\n                    <option value={c._id}>{c.name}</option>\r\n                    ))\r\n                    }\r\n                    </select>\r\n                    {/* BUSCA POR ESTADOS */}\r\n                    <select id=\"uf\" name=\"uf\" \r\n                    onLoad={e => { accountData.address.state = `${e.target.value}`}}\r\n                    onChange={handleSelectedState}>\r\n                    <option selected value=\"\">UF</option>\r\n                    {\r\n                    states.map(s => (\r\n                    <option value={s._id}>{s.name}</option>\r\n                    ))\r\n                    }\r\n                    </select>\r\n                    <input id=\"postalcode\" type=\"number\" \r\n                    placeholder=\"CEP\" required\r\n                    onChange={e => {accountData.address.postalCode = `${e.target.value}`}}\r\n                    />\r\n                </S.City>\r\n            </S.PersonalArea>\r\n            </Collapsible>\r\n            <Collapsible className=\"collMenu\" trigger=\"Dados Bancários\">\r\n            <S.BankArea>\r\n\r\n                <select id=\"bank\" name=\"bank\" \r\n                onLoad={e => { accountData.bankAccount.bank = `${e.target.value}`}}\r\n                onChange={e => { accountData.bankAccount.bank = `${e.target.value}`}}>\r\n                <option selected value=\"\">ESCOLHA SEU BANCO</option>\r\n                    {\r\n                    bank.map(b => (\r\n                    <option value={b._id}>{b.name}</option>\r\n                    ))}\r\n                </select>\r\n                <S.DataBank>\r\n                    <input id=\"agency\" type=\"number\" \r\n                    placeholder=\"Agência\" required \r\n                    onChange={e => {accountData.bankAccount.agency = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"account\" type=\"number\" \r\n                    placeholder=\"Conta\" required \r\n                    onChange={e => {accountData.bankAccount.account = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"digit\" type=\"number\" \r\n                    placeholder=\"Dígito\" required \r\n                    onChange={e => {accountData.bankAccount.accountDigit = `${e.target.value}`}}\r\n                    />\r\n                </S.DataBank>\r\n                <select id=\"typeAccount\" name=\"typeAccount\" \r\n                onChange={e => {accountData.bankAccount.type = `${e.target.value}`}}\r\n                >\r\n                <option selected value=\"currentAccount\">Conta Corrente</option>\r\n                <option value=\"savings\">Conta Poupança</option>\r\n                </select>\r\n            </S.BankArea>\r\n            </Collapsible>\r\n                <S.Next>\r\n                <a onClick={submitAccount}>\r\n                <img src={nextIcon} alt=\"next\" />\r\n                </a>\r\n                </S.Next>\r\n            <Footer style={`padding-top: 100px;`}/>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default CompanyCreate"]},"metadata":{},"sourceType":"module"}