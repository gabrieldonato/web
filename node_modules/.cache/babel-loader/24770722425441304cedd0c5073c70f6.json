{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\CompanyCreate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as S from './styles';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport Footer from '../../components/Footer';\nimport nextIcon from '../../assets/next.png';\nimport api from '../../services/api';\n\nfunction CompanyCreate() {\n  _s();\n\n  const [bank, setBank] = useState([]);\n  let accountData = {\n    \"type\": `legal`,\n    \"document\": ``,\n    \"name\": ``,\n    \"email\": ``,\n    \"address\": {\n      \"street\": ``,\n      \"number\": ``,\n      \"complement\": ``,\n      \"neighborhood\": ``,\n      \"state\": ``,\n      \"city\": ``,\n      \"postalCode\": ``\n    },\n    \"bankAccount\": {\n      \"type\": `currentAccount`,\n      \"bank\": ``,\n      \"agency\": ``,\n      \"account\": ``,\n      \"accountDigit\": ``\n    }\n  };\n  useEffect(() => {\n    loadBanks();\n  }, []);\n\n  async function loadBanks() {\n    await api.get(`/bank`).then(response => {\n      setBank(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async function submitAccount() {\n    await api.post(\"/company\", accountData).then(response => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRIA\\xC7\\xC3O DE EMPRESA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"personal\",\n      trigger: \"Dados Pessoais\",\n      children: /*#__PURE__*/_jsxDEV(S.PersonalArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"Nome / Raz\\xE3o Social\",\n          required: true,\n          onChange: e => {\n            accountData.name = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"CPF / CNPJ\",\n          required: true,\n          onChange: e => {\n            accountData.document = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typeCompany\",\n          name: \"typeCompany\",\n          onChange: e => {\n            accountData.type = `${e.target.value}`;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"legal\",\n            children: \"Pessoa F\\xEDsica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"private\",\n            children: \"Pessoa Jur\\xEDdica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Address, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"street\",\n            type: \"text\",\n            placeholder: \"Endere\\xE7o\",\n            required: true,\n            onChange: e => {\n              accountData.address.street = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"number\",\n            placeholder: \"N\\xB0\",\n            required: true,\n            onChange: e => {\n              accountData.address.number = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Complement, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"complement\",\n            type: \"text\",\n            placeholder: \"Complemento\",\n            required: true,\n            onChange: e => {\n              accountData.address.complement = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"neighborhood\",\n            type: \"text\",\n            placeholder: \"Bairro\",\n            required: true,\n            onChange: e => {\n              accountData.address.neighborhood = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.City, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            type: \"text\",\n            placeholder: \"Cidade\",\n            required: true,\n            onChange: e => {\n              accountData.address.city = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uf\",\n            type: \"text\",\n            placeholder: \"UF\",\n            required: true,\n            onChange: e => {\n              accountData.address.state = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postalcode\",\n            type: \"number\",\n            placeholder: \"CEP\",\n            required: true,\n            onChange: e => {\n              accountData.address.postalCode = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.BankArea, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bank\",\n        name: \"bank\",\n        onLoad: e => {\n          accountData.bankAccount.bank = `${e.target.value}`;\n        },\n        onChange: e => {\n          accountData.bankAccount.bank = `${e.target.value}`;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"\",\n          children: \"ESCOLHA SEU BANCO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), bank.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: b._id,\n          children: b.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.DataBank, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"agency\",\n          type: \"number\",\n          placeholder: \"Ag\\xEAncia\",\n          required: true,\n          onChange: e => {\n            accountData.bankAccount.agency = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"account\",\n          type: \"number\",\n          placeholder: \"Conta\",\n          required: true,\n          onChange: e => {\n            accountData.bankAccount.account = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"digit\",\n          type: \"number\",\n          placeholder: \"D\\xEDgito\",\n          required: true,\n          onChange: e => {\n            accountData.bankAccount.accountDigit = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"typeAccount\",\n        name: \"typeAccount\",\n        onChange: e => {\n          accountData.bankAccount.type = `${e.target.value}`;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"currentAccount\",\n          children: \"Conta Corrente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"savings\",\n          children: \"Conta Poupan\\xE7a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Next, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: submitAccount,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nextIcon,\n          alt: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: `padding-top: 100px;`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyCreate, \"JYrlEMUj7amHrnRWIRazHwEuIpM=\");\n\n_c = CompanyCreate;\nexport default CompanyCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCreate\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/CompanyCreate/index.js"],"names":["React","useState","useEffect","S","Header","Collapsible","Footer","nextIcon","api","CompanyCreate","bank","setBank","accountData","loadBanks","get","then","response","data","catch","error","console","log","submitAccount","post","e","name","target","value","document","type","address","street","number","complement","neighborhood","city","state","postalCode","bankAccount","map","b","_id","agency","account","accountDigit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport * as S from './styles'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport Footer from '../../components/Footer'\r\nimport nextIcon from '../../assets/next.png'\r\nimport api from '../../services/api'\r\n\r\n\r\nfunction CompanyCreate(){\r\n\r\n    const [bank, setBank] = useState([])\r\n\r\n    let accountData = {\r\n    \"type\": `legal`,\r\n    \"document\": ``,\r\n    \"name\": ``,\r\n    \"email\": ``,\r\n    \"address\": {\r\n        \"street\": ``,\r\n        \"number\": ``,\r\n        \"complement\": ``,\r\n        \"neighborhood\": ``,\r\n        \"state\": ``,\r\n        \"city\": ``,\r\n        \"postalCode\": ``\r\n},\r\n    \"bankAccount\": {\r\n        \"type\": `currentAccount`,\r\n        \"bank\": ``,\r\n        \"agency\": ``,\r\n        \"account\": ``,\r\n        \"accountDigit\": ``\r\n}\r\n}\r\n\r\n    useEffect(()=>{\r\n        loadBanks()\r\n    },[])\r\n\r\n    async function loadBanks() {\r\n        await api.get(`/bank`)\r\n        .then(response => {\r\n            setBank(response.data)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })     \r\n    }\r\n\r\n    async function submitAccount(){\r\n        await api.post(\"/company\", accountData)\r\n        .then(response =>{\r\n\r\n        })\r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n                <h1>CRIAÇÃO DE EMPRESA</h1>\r\n            <Collapsible className=\"personal\" trigger=\"Dados Pessoais\">\r\n            <S.PersonalArea>\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"Nome / Razão Social\" required\r\n                onChange={e => {accountData.name = `${e.target.value}`}}\r\n                />\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"CPF / CNPJ\" required\r\n                onChange={e => {accountData.document = `${e.target.value}`}}\r\n                />\r\n                <select id=\"typeCompany\" name=\"typeCompany\" \r\n                onChange={e => {accountData.type = `${e.target.value}`}}\r\n                >\r\n                <option selected value=\"legal\">Pessoa Física</option>\r\n                <option value=\"private\">Pessoa Jurídica</option>\r\n                </select>\r\n                <S.Address>\r\n                    <input id=\"street\" type=\"text\" \r\n                    placeholder=\"Endereço\" required\r\n                    onChange={e => {accountData.address.street = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"number\" type=\"number\" \r\n                    placeholder=\"N°\" required\r\n                    onChange={e => {accountData.address.number = `${e.target.value}`}}\r\n                    />\r\n                </S.Address>\r\n                <S.Complement>\r\n                    <input id=\"complement\" type=\"text\" \r\n                    placeholder=\"Complemento\" required\r\n                    onChange={e => {accountData.address.complement = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"neighborhood\" type=\"text\" \r\n                    placeholder=\"Bairro\" required\r\n                    onChange={e => {accountData.address.neighborhood = `${e.target.value}`}}\r\n                    />\r\n                </S.Complement>\r\n                <S.City>\r\n                    <input id=\"city\" type=\"text\" \r\n                    placeholder=\"Cidade\" required\r\n                    onChange={e => {accountData.address.city = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"uf\" type=\"text\" \r\n                    placeholder=\"UF\" required\r\n                    onChange={e => {accountData.address.state = `${e.target.value}`}}\r\n                    />\r\n                    <input id=\"postalcode\" type=\"number\" \r\n                    placeholder=\"CEP\" required\r\n                    onChange={e => {accountData.address.postalCode = `${e.target.value}`}}\r\n                    />\r\n                </S.City>\r\n            </S.PersonalArea>\r\n            </Collapsible>\r\n\r\n            <S.BankArea>\r\n                <select id=\"bank\" name=\"bank\" \r\n                onLoad={e => { accountData.bankAccount.bank = `${e.target.value}`}}\r\n                onChange={e => { accountData.bankAccount.bank = `${e.target.value}`}}>\r\n                    <option selected value=\"\">ESCOLHA SEU BANCO</option>\r\n                    {\r\n                    bank.map(b => (\r\n                    <option value={b._id}>{b.name}</option>\r\n                    ))}\r\n                </select>\r\n                <S.DataBank>\r\n                <input id=\"agency\" type=\"number\" \r\n                placeholder=\"Agência\" required \r\n                onChange={e => {accountData.bankAccount.agency = `${e.target.value}`}}\r\n                />\r\n                <input id=\"account\" type=\"number\" \r\n                placeholder=\"Conta\" required \r\n                onChange={e => {accountData.bankAccount.account = `${e.target.value}`}}\r\n                />\r\n                <input id=\"digit\" type=\"number\" \r\n                placeholder=\"Dígito\" required \r\n                onChange={e => {accountData.bankAccount.accountDigit = `${e.target.value}`}}\r\n                />\r\n                </S.DataBank>\r\n                <select id=\"typeAccount\" name=\"typeAccount\" \r\n                onChange={e => {accountData.bankAccount.type = `${e.target.value}`}}\r\n                >\r\n                <option selected value=\"currentAccount\">Conta Corrente</option>\r\n                <option value=\"savings\">Conta Poupança</option>\r\n                </select>\r\n            </S.BankArea> \r\n                <S.Next>\r\n                <a onClick={submitAccount}>\r\n                <img src={nextIcon} alt=\"next\" />\r\n                </a>\r\n                </S.Next>\r\n            <Footer style={`padding-top: 100px;`}/>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default CompanyCreate"]},"metadata":{},"sourceType":"module"}