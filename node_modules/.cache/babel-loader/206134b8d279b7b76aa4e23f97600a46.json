{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\Transactions\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport api from '../../services/api';\nimport next from \"../../assets/next.png\";\nimport * as S from './styles';\n\nfunction Transactions() {\n  _s();\n\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  let userData = {};\n  let transaction = {\n    \"gatewayKey\": \"8353b77a-0d11-4a81-8b34-ac334bed7287\",\n    \"returnUrl\": ``,\n    \"foreignOrderId\": ``,\n    \"amount\": 1.00,\n    \"installments\": 1,\n    \"cardNumber\": ``,\n    \"cardCvv\": ``,\n    \"cardExpirationDate\": ``,\n    \"cardHolderName\": ``,\n    \"cardFlag\": ``,\n    \"paymentType\": \"credit_card\",\n    \"customer\": {\n      \"name\": ``,\n      \"document\": ``,\n      \"type\": \"private\",\n      \"email\": ``,\n      \"phoneNumbers\": [],\n      \"addresses\": {\n        \"street\": \"teste\",\n        \"number\": \"\",\n        \"neighborhood\": \"\",\n        \"city\": \"\",\n        \"postalCode\": \"\",\n        \"state\": \"\"\n      }\n    },\n    \"items\": [{\n      \"name\": \"item para teste\",\n      \"quantity\": 1,\n      \"unitPrice\": 1.00\n    }],\n    \"boletos\": []\n  };\n  const config = {\n    headers: {\n      \"Authorization\": `bearer ${localStorage.getItem('token')}`\n    }\n  };\n  useEffect(() => {\n    validation();\n    loadStates();\n  }); //Carregar Estados\n\n  async function loadStates() {\n    await api.get(`/geo/states`).then(response => {\n      setStates(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  } //Carregar Cidades\n\n\n  async function loadCities() {\n    await api.get(`/geo/states/${transaction.customer.addresses.state}/cities`).then(response => {\n      setCities(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  } //Atualizar cidades com base no estado\n\n\n  function handleSelectedState(event) {\n    transaction.customer.addresses.state = `${event.target.value}`;\n    loadCities();\n    let insert = document.getElementById('insertCities');\n    insert.innerHTML = cities.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: c._id,\n      children: c.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this));\n  }\n\n  function validation() {\n    if (localStorage.getItem('token') === null || localStorage.getItem('token') === \"undefined\") {\n      window.location.href = \"/\";\n    }\n  }\n\n  async function handleSign() {\n    await api.post('/signin', {\n      \"email\": `${localStorage.getItem('email')}`,\n      \"password\": `${document.getElementById(\"catchPassword\").value}`\n    }).then(response => {\n      userData = JSON.parse(response.request.response);\n    });\n  }\n\n  function clearBoleto() {\n    transaction.boletos = \"\";\n    transaction.paymentType = \"credit_card\";\n  }\n\n  function clearCredit() {\n    transaction.boletos = \"\";\n    transaction.paymentType = \"boleto\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"insertPassword\",\n      children: \"Primeiro, insira a senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Password, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"catchPassword\",\n        type: \"password\",\n        placeholder: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: next,\n        alt: \"submitPassword\",\n        onClick: handleSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.CustomerData, {\n      children: /*#__PURE__*/_jsxDEV(Collapsible, {\n        className: \"collMenu\",\n        trigger: \"Cliente\",\n        children: [/*#__PURE__*/_jsxDEV(S.PersonalData, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"default\",\n            type: \"text\",\n            placeholder: \"Nome\",\n            required: true,\n            id: \"nameCustomer\",\n            onChange: e => {\n              let aux = e.target.value;\n              transaction.customer.name = aux;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"default\",\n            type: \"text\",\n            placeholder: \"CPF ou RG\",\n            required: true,\n            id: \"documentCustomer\",\n            onChange: e => {\n              transaction.customer.document = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailCustomer\",\n            type: \"text\",\n            placeholder: \"E-mail\",\n            onChange: e => {\n              transaction.customer.email = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phoneNumbers\",\n            type: \"number\",\n            placeholder: \"(99) 99999-9999\",\n            onChange: e => {\n              transaction.customer.phoneNumbers = `${`${e.target.value}`}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.Address, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"street\",\n            type: \"text\",\n            placeholder: \"Endere\\xE7o\",\n            required: true,\n            onChange: e => {\n              transaction.customer.addresses.street = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"number\",\n            placeholder: \"N\\xB0\",\n            required: true,\n            onChange: e => {\n              transaction.customer.addresses.number = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.Complement, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"neighborhood\",\n            type: \"text\",\n            placeholder: \"Bairro\",\n            required: true,\n            onChange: e => {\n              transaction.customer.addresses.neighborhood = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.City, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"city\",\n            name: \"city\",\n            onChange: e => {\n              transaction.customer.addresses.city = `${`${e.target.value}`}`;\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"insertCities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), cities.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c._id,\n              children: c.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"uf\",\n            name: \"uf\",\n            onLoad: e => {\n              transaction.customer.addresses.state = `${e.target.value}`;\n            },\n            onChange: handleSelectedState,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"\",\n              children: \"UF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this), states.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s._id,\n              children: s.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postalcode\",\n            type: \"number\",\n            placeholder: \"CEP\",\n            required: true,\n            onChange: e => {\n              transaction.customer.addresses.postalCode = `${e.target.value}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Boleto, {\n      children: /*#__PURE__*/_jsxDEV(Collapsible, {\n        className: \"collMenu\",\n        trigger: \"Boleto\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: next,\n          alt: \"setBoleto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Cartao, {\n      children: /*#__PURE__*/_jsxDEV(Collapsible, {\n        className: \"collMenu\",\n        trigger: \"Cart\\xE3o de Cr\\xE9dito\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cardNumber\",\n          type: \"number\",\n          placeholder: \"N\\xFAmero do Cart\\xE3o\",\n          required: true,\n          onChange: e => {\n            transaction.cardNumber = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cardHolderName\",\n          type: \"text\",\n          placeholder: \"Nome do Cart\\xE3o\",\n          required: true,\n          onChange: e => {\n            transaction.cardHolderName = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cardExpirationDate\",\n          type: \"number\",\n          placeholder: \"Data de expira\\xE7\\xE3o (apenas n\\xFAmeros)\",\n          required: true,\n          onChange: e => {\n            transaction.cardExpirationDate = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cardCvv\",\n          type: \"number\",\n          placeholder: \"CVV\",\n          required: true,\n          onChange: e => {\n            transaction.cardCvv = `${e.target.value}`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: next,\n          id: \"clearBoleto\",\n          onClick: clearBoleto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: next,\n      id: \"submit\",\n      onClick: () => {\n        console.log(transaction.customer.name);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Transactions, \"Rh5jFZ0nhnR6D5yejnozyN7c9Wk=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/Transactions/index.js"],"names":["React","useEffect","useState","Footer","Header","Collapsible","api","next","S","Transactions","states","setStates","cities","setCities","userData","transaction","config","headers","localStorage","getItem","validation","loadStates","get","then","response","data","catch","error","console","log","loadCities","customer","addresses","state","handleSelectedState","event","target","value","insert","document","getElementById","innerHTML","map","c","_id","name","window","location","href","handleSign","post","JSON","parse","request","clearBoleto","boletos","paymentType","clearCredit","e","aux","email","phoneNumbers","street","number","neighborhood","city","s","postalCode","cardNumber","cardHolderName","cardExpirationDate","cardCvv"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport api from '../../services/api'\r\nimport next from \"../../assets/next.png\"\r\nimport * as S from './styles'\r\n\r\nfunction Transactions(){\r\n    \r\n    const [states, setStates] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    let userData = {}\r\n    let transaction = {\r\n        \"gatewayKey\": \"8353b77a-0d11-4a81-8b34-ac334bed7287\",\r\n        \"returnUrl\": ``,\r\n        \"foreignOrderId\": ``,\r\n        \"amount\": 1.00,\r\n        \"installments\": 1,\r\n        \"cardNumber\": ``,\r\n        \"cardCvv\": ``,\r\n        \"cardExpirationDate\": ``,\r\n        \"cardHolderName\": ``,\r\n        \"cardFlag\": ``,\r\n        \"paymentType\": \"credit_card\",\r\n        \"customer\": {\r\n        \"name\": ``,\r\n        \"document\": ``,\r\n        \"type\": \"private\",\r\n        \"email\": ``,\r\n        \"phoneNumbers\": [ ],\r\n        \"addresses\": {\r\n                \"street\": \"teste\",\r\n                \"number\": \"\",\r\n                \"neighborhood\": \"\",\r\n                \"city\": \"\",\r\n                \"postalCode\": \"\",\r\n                \"state\": \"\"}\r\n        },\r\n        \"items\": [ {\r\n            \"name\": \"item para teste\",\r\n            \"quantity\": 1,\r\n            \"unitPrice\": 1.00\r\n        } ],\r\n        \"boletos\": [ ]\r\n    }\r\n\r\n    const config = {\r\n        headers: { \"Authorization\": `bearer ${localStorage.getItem('token')}` }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        validation()\r\n        loadStates()\r\n    })\r\n\r\n    //Carregar Estados\r\n    async function loadStates(){\r\n        await api.get(`/geo/states`)\r\n        .then(response =>{\r\n            setStates(response.data)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    //Carregar Cidades\r\n    async function loadCities(){\r\n        await api.get(`/geo/states/${transaction.customer.addresses.state}/cities`)\r\n        .then(response =>{\r\n            setCities(response.data)\r\n        })\r\n        .catch(error =>{    \r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    //Atualizar cidades com base no estado\r\n    function handleSelectedState(event){\r\n        transaction.customer.addresses.state = `${event.target.value}`\r\n        loadCities()\r\n        let insert = document.getElementById('insertCities')\r\n        insert.innerHTML = cities.map(c => (\r\n            <option value={c._id}>{c.name}</option>\r\n            ))\r\n    }\r\n\r\n    function validation(){\r\n        if(localStorage.getItem('token') === null || localStorage.getItem('token') === \"undefined\"){\r\n            window.location.href = \"/\"\r\n        }\r\n    }\r\n\r\n    async function handleSign(){\r\n        await api.post('/signin', {\r\n            \"email\": `${localStorage.getItem('email')}`,\r\n            \"password\": `${document.getElementById(\"catchPassword\").value}`\r\n        })\r\n        .then(response =>{\r\n            userData = JSON.parse(response.request.response)\r\n        })\r\n    }\r\n\r\n    function clearBoleto(){\r\n        transaction.boletos = \"\"\r\n        transaction.paymentType = \"credit_card\"\r\n    }\r\n\r\n    function clearCredit(){\r\n        transaction.boletos = \"\"\r\n        transaction.paymentType = \"boleto\"\r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n            <h1>Cadastrar Transação</h1>\r\n            <p id=\"insertPassword\">Primeiro, insira a senha</p>\r\n            <S.Password>\r\n            <input id=\"catchPassword\" type=\"password\" placeholder=\"Senha\"/>\r\n            <img src={next} alt=\"submitPassword\" \r\n            onClick={handleSign}/>\r\n            </S.Password>\r\n            <S.CustomerData>\r\n            <Collapsible className=\"collMenu\" trigger=\"Cliente\">\r\n            <S.PersonalData>\r\n            <input className=\"default\" type=\"text\" \r\n            placeholder=\"Nome\" required\r\n            id=\"nameCustomer\"\r\n            onChange={(e) => {\r\n                let aux = e.target.value \r\n                transaction.customer.name = aux\r\n            }\r\n        }\r\n            />\r\n            <input className=\"default\" type=\"text\" \r\n            placeholder=\"CPF ou RG\" required\r\n            id=\"documentCustomer\"\r\n            onChange={e => {transaction.customer.document = `${e.target.value}`}}\r\n            />\r\n            <input id=\"emailCustomer\" type=\"text\"\r\n            placeholder=\"E-mail\"\r\n            onChange={e => {transaction.customer.email = `${e.target.value}`}}\r\n            />\r\n            <input id=\"phoneNumbers\" type=\"number\"\r\n            placeholder=\"(99) 99999-9999\"\r\n            onChange={e => {transaction.customer.phoneNumbers = `${`${e.target.value}`}`}}\r\n            />\r\n            </S.PersonalData>\r\n            <S.Address>\r\n                <input id=\"street\" type=\"text\" \r\n                placeholder=\"Endereço\" required\r\n                onChange={e => {transaction.customer.addresses.street = `${e.target.value}`}}\r\n                />\r\n                <input id=\"number\" type=\"number\" \r\n                placeholder=\"N°\" required\r\n                onChange={e => {transaction.customer.addresses.number = `${e.target.value}`}}\r\n                />\r\n            </S.Address>\r\n            <S.Complement>\r\n                    <input id=\"neighborhood\" type=\"text\" \r\n                    placeholder=\"Bairro\" required\r\n                    onChange={e => {transaction.customer.addresses.neighborhood = `${e.target.value}`}}\r\n                    />\r\n                </S.Complement>\r\n                <S.City>\r\n                    {/* BUSCA POR CIDADES */}\r\n                    <select id=\"city\" name=\"city\" \r\n                    onChange={e => { \r\n                        transaction.customer.addresses.city = `${`${e.target.value}`}`\r\n                    }}>\r\n                    <option selected value=\"\">Cidade</option>\r\n                    <div id=\"insertCities\">\r\n\r\n                    </div>\r\n                    {\r\n                    cities.map(c => (\r\n                    <option value={c._id}>{c.name}</option>\r\n                    ))\r\n                    }\r\n                    </select>\r\n                    {/* BUSCA POR ESTADOS */}\r\n                    <select id=\"uf\" name=\"uf\" \r\n                    onLoad={e => { transaction.customer.addresses.state = `${e.target.value}`}}\r\n                    onChange={handleSelectedState}>\r\n                    <option selected value=\"\">UF</option>\r\n                    {\r\n                    states.map(s => (\r\n                    <option value={s._id}>{s.name}</option>\r\n                    ))\r\n                    }\r\n                    </select>\r\n                    <input id=\"postalcode\" type=\"number\" \r\n                    placeholder=\"CEP\" required\r\n                    onChange={e => {transaction.customer.addresses.postalCode = `${e.target.value}`}}\r\n                    />\r\n                </S.City>\r\n                </Collapsible>\r\n            </S.CustomerData>\r\n            <Footer />\r\n            <S.Boleto>\r\n            <Collapsible className=\"collMenu\" trigger=\"Boleto\">\r\n                \r\n            <img src={next} alt=\"setBoleto\" />\r\n            </Collapsible>\r\n            </S.Boleto>\r\n            \r\n            <S.Cartao>\r\n            <Collapsible className=\"collMenu\" trigger=\"Cartão de Crédito\">\r\n            <input id=\"cardNumber\" type=\"number\" \r\n            placeholder=\"Número do Cartão\" required\r\n            onChange={e => {transaction.cardNumber = `${e.target.value}`}}\r\n            />\r\n            <input id=\"cardHolderName\" type=\"text\" \r\n            placeholder=\"Nome do Cartão\" required\r\n            onChange={e => {transaction.cardHolderName = `${e.target.value}`}}\r\n            />\r\n            <input id=\"cardExpirationDate\" type=\"number\" \r\n            placeholder=\"Data de expiração (apenas números)\" required\r\n            onChange={e => {transaction.cardExpirationDate = `${e.target.value}`}}\r\n            />\r\n            <input id=\"cardCvv\" type=\"number\" \r\n            placeholder=\"CVV\" required\r\n            onChange={e => {transaction.cardCvv = `${e.target.value}`}}\r\n            />\r\n            <img src={next} id=\"clearBoleto\" onClick={clearBoleto}/>\r\n            </Collapsible>\r\n            </S.Cartao>\r\n            <img src={next} id=\"submit\" onClick={() =>{console.log(transaction.customer.name)}}/>\r\n        </S.Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Transactions"]},"metadata":{},"sourceType":"module"}