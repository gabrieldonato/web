{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Pagarapido\\\\MERN\\\\WEB\\\\web\\\\src\\\\views\\\\CompanyCreate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport * as S from './styles';\nimport Header from '../../components/Header';\nimport Collapsible from 'react-collapsible';\nimport Footer from '../../components/Footer';\nimport nextIcon from '../../assets/next.png';\nimport api from '../../services/api';\n\nfunction CompanyCreate() {\n  _s();\n\n  const [typeCompany, setTypeCompany] = useState('private');\n  const [typeAccount, setTypeAccount] = useState('private');\n  const [bank, setBank] = useState([]);\n  const [bankId, setBankId] = useState();\n  const [accountData, setAccountData] = useState([{\n    \"type\": `legal`,\n    \"document\": ``,\n    \"name\": ``,\n    \"email\": ``,\n    \"address\": {\n      \"street\": ``,\n      \"number\": ``,\n      \"complement\": ``,\n      \"neighborhood\": ``,\n      \"state\": ``,\n      \"city\": ``,\n      \"postalCode\": ``\n    },\n    \"bankAccount\": {\n      \"type\": `currentAccount`,\n      \"bank\": ``,\n      \"agency\": ``,\n      \"account\": ``,\n      \"accountDigit\": ``\n    }\n  }]);\n  useEffect(() => {\n    loadBanks();\n  }, []);\n\n  async function loadBanks() {\n    await api.get(`/bank`).then(response => {\n      setBank(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleSelectedCompany(event) {\n    setTypeCompany(event.target.value);\n  }\n\n  function handleSelectedBank(event) {\n    setBankId(event.target.value);\n  }\n\n  function handleSelectedAccount(event) {\n    setTypeAccount(event.target.value);\n  }\n\n  async function submitAccount() {\n    await api.post(\"/company\", accountData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRIA\\xC7\\xC3O DE EMPRESA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      className: \"personal\",\n      trigger: \"Dados Pessoais\",\n      children: /*#__PURE__*/_jsxDEV(S.PersonalArea, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"Nome / Raz\\xE3o Social\",\n          required: true,\n          onChange: e => {\n            setAccountData({\n              \"name\": `${e.target.value}`\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default\",\n          type: \"text\",\n          placeholder: \"CPF / CNPJ\",\n          required: true,\n          onChange: e => {\n            setAccountData({\n              \"document\": `${e.target.value}`\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typeCompany\",\n          name: \"typeCompany\",\n          onChange: e => {\n            setAccountData({\n              \"type\": `${e.target.value}`\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"legal\",\n            children: \"Pessoa F\\xEDsica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"private\",\n            children: \"Pessoa Jur\\xEDdica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Address, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"street\",\n            type: \"text\",\n            placeholder: \"Endere\\xE7o\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"street\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"number\",\n            type: \"number\",\n            placeholder: \"N\\xB0\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"number\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Complement, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"complement\",\n            type: \"text\",\n            placeholder: \"Complemento\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"complement\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"neighborhood\",\n            type: \"text\",\n            placeholder: \"Bairro\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"neighborhood\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.City, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            type: \"text\",\n            placeholder: \"Cidade\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"city\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"uf\",\n            type: \"text\",\n            placeholder: \"UF\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"state\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postalcode\",\n            type: \"number\",\n            placeholder: \"CEP\",\n            required: true,\n            onChange: e => {\n              setAccountData({\n                \"address\": {\n                  \"postalCode\": `${e.target.value}`\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.BankArea, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"bank\",\n        name: \"bank\",\n        onLoad: e => {\n          setAccountData({\n            \"bankAccount\": {\n              \"bank\": `${e.target.value}`\n            }\n          });\n        },\n        onChange: e => {\n          setAccountData({\n            \"bankAccount\": {\n              \"bank\": `${e.target.value}`\n            }\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"\",\n          children: \"ESCOLHA SEU BANCO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), bank.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: b._id,\n          children: b.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.DataBank, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"agency\",\n          type: \"number\",\n          placeholder: \"Ag\\xEAncia\",\n          required: true,\n          onChange: e => {\n            setAccountData({\n              \"bankAccount\": {\n                \"agency\": `${e.target.value}`\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"account\",\n          type: \"number\",\n          placeholder: \"Conta\",\n          required: true,\n          onChange: e => {\n            setAccountData({\n              \"bankAccount\": {\n                \"account\": `${e.target.value}`\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"digit\",\n          type: \"number\",\n          placeholder: \"D\\xEDgito\",\n          required: true,\n          onChange: e => {\n            setAccountData({\n              \"bankAccount\": {\n                \"accountDigit\": `${e.target.value}`\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"typeAccount\",\n        name: \"typeAccount\",\n        onChange: e => {\n          setAccountData({\n            \"bankAccount\": {\n              \"type\": `${e.target.value}`\n            }\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"currentAccount\",\n          children: \"Conta Corrente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"savings\",\n          children: \"Conta Poupan\\xE7a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Next, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => {\n          console.log(accountData.type);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nextIcon,\n          alt: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: `padding-top: 100px;`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyCreate, \"uHr5EtnycjI9VQogONySxOK3/pQ=\");\n\n_c = CompanyCreate;\nexport default CompanyCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCreate\");","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Pagarapido/MERN/WEB/web/src/views/CompanyCreate/index.js"],"names":["React","useState","useEffect","Component","S","Header","Collapsible","Footer","nextIcon","api","CompanyCreate","typeCompany","setTypeCompany","typeAccount","setTypeAccount","bank","setBank","bankId","setBankId","accountData","setAccountData","loadBanks","get","then","response","data","catch","error","console","log","handleSelectedCompany","event","target","value","handleSelectedBank","handleSelectedAccount","submitAccount","post","e","map","b","_id","name","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport * as S from './styles'\r\nimport Header from '../../components/Header'\r\nimport Collapsible from 'react-collapsible'\r\nimport Footer from '../../components/Footer'\r\nimport nextIcon from '../../assets/next.png'\r\nimport api from '../../services/api'\r\n\r\n\r\nfunction CompanyCreate(){\r\n\r\n    const [typeCompany, setTypeCompany] = useState('private')\r\n    const [typeAccount, setTypeAccount] = useState('private')\r\n    const [bank, setBank] = useState([])\r\n    const [bankId, setBankId] = useState()\r\n    const [accountData, setAccountData] = useState([{\r\n        \"type\": `legal`,\r\n        \"document\": ``,\r\n        \"name\": ``,\r\n        \"email\": ``,\r\n        \"address\": {\r\n        \"street\": ``,\r\n        \"number\": ``,\r\n        \"complement\": ``,\r\n        \"neighborhood\": ``,\r\n        \"state\": ``,\r\n        \"city\": ``,\r\n        \"postalCode\": ``\r\n        },\r\n        \"bankAccount\": {\r\n        \"type\": `currentAccount`,\r\n        \"bank\": ``,\r\n        \"agency\": ``,\r\n        \"account\": ``,\r\n        \"accountDigit\": ``,\r\n        }\r\n        }\r\n    ])\r\n\r\n    useEffect(()=>{\r\n        loadBanks()\r\n    },[])\r\n\r\n    async function loadBanks() {\r\n        await api.get(`/bank`)\r\n        .then(response => {\r\n            setBank(response.data)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })     \r\n    }\r\n\r\n    function handleSelectedCompany(event){\r\n        setTypeCompany(event.target.value)\r\n    }\r\n\r\n    function handleSelectedBank(event){\r\n        setBankId(event.target.value)\r\n    }\r\n\r\n    function handleSelectedAccount(event){\r\n        setTypeAccount(event.target.value)\r\n    }\r\n\r\n    async function submitAccount(){\r\n        await api.post(\"/company\", accountData)\r\n    }\r\n\r\n    return(\r\n        <S.Container>\r\n            <Header />\r\n                <h1>CRIAÇÃO DE EMPRESA</h1>\r\n            <Collapsible className=\"personal\" trigger=\"Dados Pessoais\">\r\n            <S.PersonalArea>\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"Nome / Razão Social\" required\r\n                onChange={e => {setAccountData({\"name\": `${e.target.value}`})}}\r\n                />\r\n                <input className=\"default\" type=\"text\" \r\n                placeholder=\"CPF / CNPJ\" required\r\n                onChange={e => {setAccountData({\"document\": `${e.target.value}`})}}\r\n                />\r\n                <select id=\"typeCompany\" name=\"typeCompany\" \r\n                onChange={e => {setAccountData({\"type\": `${e.target.value}`})}}\r\n                >\r\n                <option selected value=\"legal\">Pessoa Física</option>\r\n                <option value=\"private\">Pessoa Jurídica</option>\r\n                </select>\r\n                <S.Address>\r\n                <input id=\"street\" type=\"text\" \r\n                placeholder=\"Endereço\" required\r\n                onChange={e => {setAccountData({\"address\":{\"street\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"number\" type=\"number\" \r\n                placeholder=\"N°\" required\r\n                onChange={e => {setAccountData({\"address\":{\"number\": `${e.target.value}`}})}}\r\n                />\r\n                </S.Address>\r\n                <S.Complement>\r\n                <input id=\"complement\" type=\"text\" \r\n                placeholder=\"Complemento\" required\r\n                onChange={e => {setAccountData({\"address\":{\"complement\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"neighborhood\" type=\"text\" \r\n                placeholder=\"Bairro\" required\r\n                onChange={e => {setAccountData({\"address\":{\"neighborhood\": `${e.target.value}`}})}}\r\n                />\r\n                </S.Complement>\r\n                <S.City>\r\n                <input id=\"city\" type=\"text\" \r\n                placeholder=\"Cidade\" required\r\n                onChange={e => {setAccountData({\"address\":{\"city\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"uf\" type=\"text\" \r\n                placeholder=\"UF\" required\r\n                onChange={e => {setAccountData({\"address\":{\"state\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"postalcode\" type=\"number\" \r\n                placeholder=\"CEP\" required\r\n                onChange={e => {setAccountData({\"address\":{\"postalCode\": `${e.target.value}`}})}}\r\n                />\r\n                </S.City>\r\n            </S.PersonalArea>\r\n            </Collapsible>\r\n\r\n            <S.BankArea>\r\n                <select id=\"bank\" name=\"bank\" \r\n                onLoad={e => { setAccountData({\"bankAccount\":{\"bank\": `${e.target.value}`}})}}\r\n                onChange={e => { setAccountData({\"bankAccount\":{\"bank\": `${e.target.value}`}})}}>\r\n                    <option selected value=\"\">ESCOLHA SEU BANCO</option>\r\n                    {\r\n                    bank.map(b => (\r\n                    <option value={b._id}>{b.name}</option>\r\n                    ))}\r\n                </select>\r\n                <S.DataBank>\r\n                <input id=\"agency\" type=\"number\" \r\n                placeholder=\"Agência\" required \r\n                onChange={e => {setAccountData({\"bankAccount\":{\"agency\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"account\" type=\"number\" \r\n                placeholder=\"Conta\" required \r\n                onChange={e => {setAccountData({\"bankAccount\":{\"account\": `${e.target.value}`}})}}\r\n                />\r\n                <input id=\"digit\" type=\"number\" \r\n                placeholder=\"Dígito\" required \r\n                onChange={e => {setAccountData({\"bankAccount\":{\"accountDigit\": `${e.target.value}`}})}}\r\n                />\r\n                </S.DataBank>\r\n                <select id=\"typeAccount\" name=\"typeAccount\" \r\n                onChange={e => {setAccountData({\"bankAccount\":{\"type\": `${e.target.value}`}})}}\r\n                >\r\n                <option selected value=\"currentAccount\">Conta Corrente</option>\r\n                <option value=\"savings\">Conta Poupança</option>\r\n                </select>\r\n            </S.BankArea> \r\n                <S.Next>\r\n                <a onClick={() => {\r\n                    console.log(accountData.type)\r\n                }}>\r\n                <img src={nextIcon} alt=\"next\" />\r\n                </a>\r\n                </S.Next>\r\n            <Footer style={`padding-top: 100px;`}/>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default CompanyCreate"]},"metadata":{},"sourceType":"module"}